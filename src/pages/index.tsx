import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Image from "next/image";

const Home: NextPage = () => {
  const hello = api.example.getAll.useQuery();
  const secretHello = api.example.getSecretAll.useQuery("secret");
  const allTodos = api.example.getAllTodos.useQuery();
  const utils = api.useContext();
  const toggleTodo = api.example.toggleTodo.useMutation({
    async onMutate(id) {
      await utils.example.getAllTodos.cancel();
      const previousTodos = utils.example.getAllTodos.getData();
      //optimistic update
      utils.example.getAllTodos.setData(undefined, (prev) => {
        return prev?.map((todo) => {
          if (todo.id === id) {
            return { ...todo, completed: !todo.completed };
          }
          return todo;
        });
      });
      return { previousTodos };
    },
    async onSuccess() {
      await utils.example.getAllTodos.refetch();
    },
    onError(error, variables, context) {
      utils.example.getAllTodos.setData(undefined, context?.previousTodos);
    },
  });
  const { data: session } = useSession();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-black text-white">
        {hello.isLoading ? <p>Loading...</p> : <p>{hello.data}</p>}
        {session ? (
          <button onClick={() => void signOut()}>Sign out</button>
        ) : (
          <button onClick={() => void signIn()}>Sign in</button>
        )}
        {/* if session, display my name and picture */}
        {session && (
          <>
            <p>Signed in as {session.user?.email}</p>
            <div>
              <Image
                src={session.user?.image ?? ""}
                alt="user picture"
                width={128}
                height={128}
                className="rounded-full"
              />
            </div>
          </>
        )}
        {/* if session, display secret hello */}
        {session && (
          <>
            {secretHello.isLoading ? (
              <p>Loading...</p>
            ) : (
              <p>{secretHello.data}</p>
            )}
          </>
        )}
        {/* if session, display all todos */}
        {session && (
          <>
            {allTodos.isLoading ? (
              <p>Loading...</p>
            ) : (
              <ul>
                {allTodos.data?.map((todo) => (
                  <li
                    key={todo.id}
                    className={`cursor-pointer ${
                      todo.completed ? "line-through" : ""
                    }`}
                    onClick={() => toggleTodo.mutate(todo.id)}
                  >
                    {todo.title}
                  </li>
                ))}
              </ul>
            )}
          </>
        )}
      </main>
    </>
  );
};

export default Home;
